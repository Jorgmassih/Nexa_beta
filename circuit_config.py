#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Oct 22, 2018 07:06:06 PM AST  platform: Linux

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import circuit_config_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Toplevel()
    top = Configuraciones_Op_Amp (root)
    circuit_config_support.init(root, top)
    root.mainloop()

w = None
def create_Configuraciones_Op_Amp(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Configuraciones_Op_Amp (w)
    circuit_config_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Configuraciones_Op_Amp():
    global w
    w.destroy()
    w = None


#**********************Edited************************************

#----------------------Ecuations solver function-----------------
def change_image(self, boolean):
    if(boolean):
        self.idx+=1
    elif (not boolean):
        self.idx-=1
            
    if(self.idx>5):
        self.idx = 1
    elif(self.idx<1):
        self.idx = 5
        
    self._img1 = PhotoImage(file="Config Op Amp/" + str(self.idx) + ".png")    
    self.image_label.configure(image=self._img1)
               
        
#************************Edited************************************


class Configuraciones_Op_Amp:


    def __init__(self, top=None):

        self.idx=1

        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {DejaVu Sans} -size 10 -weight bold -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("1003x639+242+32")
        top.title("Configuraciones Op Amp")
        top.configure(background="#2d3436")
        top.configure(highlightcolor="black")



        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.image_label = Label(top)
        self.image_label.place(relx=0.050, rely=0.031, height=521, width=900)
        self._img1 = PhotoImage(file="Config Op Amp/" + str(self.idx) + ".png")
        self.image_label.configure(image=self._img1)
        self.image_label.configure(text='''image_label''')
        self.image_label.configure(width=900)

        self.Button1 = Button(top, command=lambda:change_image(self, boolean=True))
        self.Button1.place(relx=0.489, rely=0.892, height=29, width=98)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(background="#1abc9c")
        self.Button1.configure(font=font10)
        self.Button1.configure(highlightbackground="#1abc9c")
        self.Button1.configure(relief=FLAT)
        self.Button1.configure(text='''Siguiente''')

        self.Button1_3 = Button(top, command=lambda:change_image(self, boolean=False))
        self.Button1_3.place(relx=0.369, rely=0.892, height=29, width=97)
        self.Button1_3.configure(activebackground="#d9d9d9")
        self.Button1_3.configure(background="#1abc9c")
        self.Button1_3.configure(font=font10)
        self.Button1_3.configure(highlightbackground="#1abc9c")
        self.Button1_3.configure(relief=FLAT)
        self.Button1_3.configure(text='''Anterior''')
        self.Button1_3.configure(width=97)






if __name__ == '__main__':
    vp_start_gui()



